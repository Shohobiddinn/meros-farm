/*
 * Meros web app
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.62
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MerosWebApp);
  }
}(this, function(expect, MerosWebApp) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('ProductBase', function() {
      beforeEach(function() {
        instance = new MerosWebApp.ProductBase();
      });

      it('should create an instance of ProductBase', function() {
        // TODO: update the code to test ProductBase
        expect(instance).to.be.a(MerosWebApp.ProductBase);
      });

      it('should have the property code (base name: "code")', function() {
        // TODO: update the code to test the property code
        expect(instance).to.have.property('code');
        // expect(instance.code).to.be(expectedValueLiteral);
      });

      it('should have the property idNumber (base name: "id_number")', function() {
        // TODO: update the code to test the property idNumber
        expect(instance).to.have.property('idNumber');
        // expect(instance.idNumber).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property _number (base name: "number")', function() {
        // TODO: update the code to test the property _number
        expect(instance).to.have.property('_number');
        // expect(instance._number).to.be(expectedValueLiteral);
      });

      it('should have the property isOrdered (base name: "is_ordered")', function() {
        // TODO: update the code to test the property isOrdered
        expect(instance).to.have.property('isOrdered');
        // expect(instance.isOrdered).to.be(expectedValueLiteral);
      });

      it('should have the property price100 (base name: "price100")', function() {
        // TODO: update the code to test the property price100
        expect(instance).to.have.property('price100');
        // expect(instance.price100).to.be(expectedValueLiteral);
      });

      it('should have the property price25 (base name: "price25")', function() {
        // TODO: update the code to test the property price25
        expect(instance).to.have.property('price25');
        // expect(instance.price25).to.be(expectedValueLiteral);
      });

      it('should have the property percentage (base name: "percentage")', function() {
        // TODO: update the code to test the property percentage
        expect(instance).to.have.property('percentage');
        // expect(instance.percentage).to.be(expectedValueLiteral);
      });

      it('should have the property deadline (base name: "deadline")', function() {
        // TODO: update the code to test the property deadline
        expect(instance).to.have.property('deadline');
        // expect(instance.deadline).to.be(expectedValueLiteral);
      });

      it('should have the property companyName (base name: "company_name")', function() {
        // TODO: update the code to test the property companyName
        expect(instance).to.have.property('companyName');
        // expect(instance.companyName).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property branchId (base name: "branch_id")', function() {
        // TODO: update the code to test the property branchId
        expect(instance).to.have.property('branchId');
        // expect(instance.branchId).to.be(expectedValueLiteral);
      });

    });
  });

}));
