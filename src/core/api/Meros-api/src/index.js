/*
 * Meros web app
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.62
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from './ApiClient';
import AnyOfValidationErrorLocItems from './model/AnyOfValidationErrorLocItems';
import BasketAdd from './model/BasketAdd';
import BasketCreate from './model/BasketCreate';
import BasketUpdate from './model/BasketUpdate';
import BodyLoginForAccessTokenAuthTokenPost from './model/BodyLoginForAccessTokenAuthTokenPost';
import BranchCreate from './model/BranchCreate';
import HTTPValidationError from './model/HTTPValidationError';
import OrderCreate from './model/OrderCreate';
import ProductBase from './model/ProductBase';
import ProductUpdate from './model/ProductUpdate';
import SoldProductBase from './model/SoldProductBase';
import SoldProductUpdate from './model/SoldProductUpdate';
import TradeUpdate from './model/TradeUpdate';
import UserCreate from './model/UserCreate';
import UserUpdate from './model/UserUpdate';
import ValidationError from './model/ValidationError';
import BasketSectionApi from './api/BasketSectionApi';
import BranchSectionApi from './api/BranchSectionApi';
import DefaultApi from './api/DefaultApi';
import OrderSectionApi from './api/OrderSectionApi';
import ProductsSectionApi from './api/ProductsSectionApi';
import SoldProductsSectionApi from './api/SoldProductsSectionApi';
import TradeSectionApi from './api/TradeSectionApi';
import UserAuthSectionApi from './api/UserAuthSectionApi';
import UserSectionApi from './api/UserSectionApi';

/**
* Object.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MerosWebApp = require('index'); // See note below*.
* var xxxSvc = new MerosWebApp.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MerosWebApp.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MerosWebApp.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MerosWebApp.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnyOfValidationErrorLocItems model constructor.
     * @property {module:model/AnyOfValidationErrorLocItems}
     */
    AnyOfValidationErrorLocItems,

    /**
     * The BasketAdd model constructor.
     * @property {module:model/BasketAdd}
     */
    BasketAdd,

    /**
     * The BasketCreate model constructor.
     * @property {module:model/BasketCreate}
     */
    BasketCreate,

    /**
     * The BasketUpdate model constructor.
     * @property {module:model/BasketUpdate}
     */
    BasketUpdate,

    /**
     * The BodyLoginForAccessTokenAuthTokenPost model constructor.
     * @property {module:model/BodyLoginForAccessTokenAuthTokenPost}
     */
    BodyLoginForAccessTokenAuthTokenPost,

    /**
     * The BranchCreate model constructor.
     * @property {module:model/BranchCreate}
     */
    BranchCreate,

    /**
     * The HTTPValidationError model constructor.
     * @property {module:model/HTTPValidationError}
     */
    HTTPValidationError,

    /**
     * The OrderCreate model constructor.
     * @property {module:model/OrderCreate}
     */
    OrderCreate,

    /**
     * The ProductBase model constructor.
     * @property {module:model/ProductBase}
     */
    ProductBase,

    /**
     * The ProductUpdate model constructor.
     * @property {module:model/ProductUpdate}
     */
    ProductUpdate,

    /**
     * The SoldProductBase model constructor.
     * @property {module:model/SoldProductBase}
     */
    SoldProductBase,

    /**
     * The SoldProductUpdate model constructor.
     * @property {module:model/SoldProductUpdate}
     */
    SoldProductUpdate,

    /**
     * The TradeUpdate model constructor.
     * @property {module:model/TradeUpdate}
     */
    TradeUpdate,

    /**
     * The UserCreate model constructor.
     * @property {module:model/UserCreate}
     */
    UserCreate,

    /**
     * The UserUpdate model constructor.
     * @property {module:model/UserUpdate}
     */
    UserUpdate,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
    * The BasketSectionApi service constructor.
    * @property {module:api/BasketSectionApi}
    */
    BasketSectionApi,

    /**
    * The BranchSectionApi service constructor.
    * @property {module:api/BranchSectionApi}
    */
    BranchSectionApi,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The OrderSectionApi service constructor.
    * @property {module:api/OrderSectionApi}
    */
    OrderSectionApi,

    /**
    * The ProductsSectionApi service constructor.
    * @property {module:api/ProductsSectionApi}
    */
    ProductsSectionApi,

    /**
    * The SoldProductsSectionApi service constructor.
    * @property {module:api/SoldProductsSectionApi}
    */
    SoldProductsSectionApi,

    /**
    * The TradeSectionApi service constructor.
    * @property {module:api/TradeSectionApi}
    */
    TradeSectionApi,

    /**
    * The UserAuthSectionApi service constructor.
    * @property {module:api/UserAuthSectionApi}
    */
    UserAuthSectionApi,

    /**
    * The UserSectionApi service constructor.
    * @property {module:api/UserSectionApi}
    */
    UserSectionApi
};
